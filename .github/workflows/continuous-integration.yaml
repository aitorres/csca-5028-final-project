name: Continuous Integration

on: [push]

jobs:
  build_web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t web -f web/Dockerfile web
      - name: Check style with flake8
        run: docker run --rm web poetry run flake8 web
      - name: Check types with mypy
        run: docker run --rm web poetry run mypy web
      - name: Lint files with pylint
        run: docker run --rm web poetry run pylint web
      - name: Run web tests in Docker
        run: docker run --rm web poetry run pytest
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: csca5028finalprojectacr.azurecr.io
          username: ${{ secrets.AZURE_ACR_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_ACR_REGISTRY_PASSWORD }}
      - name: Build and push image to Azure Container Registry
        run: |
          docker build -f web/Dockerfile web -t csca5028finalprojectacr.azurecr.io/web:latest
          docker push csca5028finalprojectacr.azurecr.io/web:latest

  deploy_infrastructure:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build_web
    defaults:
      run:
        working-directory: infrastructure

    env:
      TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - uses: actions/checkout@v4
      - name: Azure Login action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
            terraform_version: 1.12.2
      - name: Initialize Terraform
        run: terraform init
      - name: Validate Terraform configuration
        run: terraform validate
      - name: Apply Terraform deployment
        run: terraform apply -auto-approve
