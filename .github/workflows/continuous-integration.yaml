name: Continuous Integration

on: [push]

jobs:
  build_web:
    runs-on: ubuntu-latest
    outputs:
      web_hash: ${{ steps.web_hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t web -f web/Dockerfile web
      - name: Check style with flake8
        run: docker run --rm web poetry run flake8 web
      - name: Check types with mypy
        run: docker run --rm web poetry run mypy web
      - name: Lint files with pylint
        run: docker run --rm web poetry run pylint web
      - name: Run web tests in Docker
        run: docker run --rm web poetry run pytest
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: csca5028finalprojectacr.azurecr.io
          username: ${{ secrets.AZURE_ACR_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_ACR_REGISTRY_PASSWORD }}
      - name: Compute hash of web directory
        id: web_hash
        run: |
          HASH=$(find web -type f -exec sha1sum {} \; | sort | sha1sum | awk '{print $1}')
          echo "hash=$HASH" >> $GITHUB_OUTPUT
      - name: Build and push image to Azure Container Registry
        run: |
          HASH=${{ steps.web_hash.outputs.hash }}
          docker build -f web/Dockerfile web -t csca5028finalprojectacr.azurecr.io/web:${HASH}
          docker push csca5028finalprojectacr.azurecr.io/web:${HASH}

  build_collector:
    runs-on: ubuntu-latest
    outputs:
      collector_hash: ${{ steps.collector_hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t collector -f collector/Dockerfile collector
      - name: Check style with flake8
        run: docker run --rm collector poetry run flake8 collector
      - name: Check types with mypy
        run: docker run --rm collector poetry run mypy collector
      - name: Lint files with pylint
        run: docker run --rm collector poetry run pylint collector
      - name: Run collector tests in Docker
        run: docker run --rm collector poetry run pytest
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: csca5028finalprojectacr.azurecr.io
          username: ${{ secrets.AZURE_ACR_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_ACR_REGISTRY_PASSWORD }}
      - name: Compute hash of collector directory
        id: collector_hash
        run: |
          HASH=$(find collector -type f -exec sha1sum {} \; | sort | sha1sum | awk '{print $1}')
          echo "hash=$HASH" >> $GITHUB_OUTPUT
      - name: Build and push image to Azure Container Registry
        run: |
          HASH=${{ steps.collector_hash.outputs.hash }}
          docker build -f collector/Dockerfile collector -t csca5028finalprojectacr.azurecr.io/collector:${HASH}
          docker push csca5028finalprojectacr.azurecr.io/collector:${HASH}

  build_analyzer:
    runs-on: ubuntu-latest
    outputs:
      analyzer_hash: ${{ steps.analyzer_hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t analyzer -f analyzer/Dockerfile analyzer
      - name: Check style with flake8
        run: docker run --rm analyzer poetry run flake8 analyzer
      - name: Check types with mypy
        run: docker run --rm analyzer poetry run mypy analyzer
      - name: Lint files with pylint
        run: docker run --rm analyzer poetry run pylint analyzer
      - name: Run analyzer tests in Docker
        run: docker run --rm analyzer poetry run pytest
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: csca5028finalprojectacr.azurecr.io
          username: ${{ secrets.AZURE_ACR_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_ACR_REGISTRY_PASSWORD }}
      - name: Compute hash of analyzer directory
        id: analyzer_hash
        run: |
          HASH=$(find analyzer -type f -exec sha1sum {} \; | sort | sha1sum | awk '{print $1}')
          echo "hash=$HASH" >> $GITHUB_OUTPUT
      - name: Build and push image to Azure Container Registry
        run: |
          HASH=${{ steps.analyzer_hash.outputs.hash }}
          docker build -f analyzer/Dockerfile analyzer -t csca5028finalprojectacr.azurecr.io/analyzer:${HASH}
          docker push csca5028finalprojectacr.azurecr.io/analyzer:${HASH}

  deploy_infrastructure:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build_web
    defaults:
      run:
        working-directory: infrastructure

    env:
      TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_web_image_tag: ${{ needs.build_web.outputs.web_hash }}

    steps:
      - uses: actions/checkout@v4
      - name: Azure Login action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: 1.12.2
      - name: Initialize Terraform
        run: terraform init
      - name: Validate Terraform configuration
        run: terraform validate
      - name: Apply Terraform deployment
        run: terraform apply -auto-approve
