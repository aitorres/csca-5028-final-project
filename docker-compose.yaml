services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    volumes:
      - ./rabbitmq-config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq-config/definitions.json:/etc/rabbitmq/definitions.json:ro
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq-user
      RABBITMQ_DEFAULT_PASS: rabbitmq-password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 5s
      timeout: 2s
      retries: 5

  collector:
    build:
      context: ./collector
    container_name: collector
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: rabbitmq-user
      RABBITMQ_PASSWORD: rabbitmq-password
      RABBITMQ_QUEUE_NAME: posts_queue
      RABBITMQ_EXCHANGE_NAME: posts_exchange

  analyzer:
    build:
      context: ./analyzer
    container_name: analyzer
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: rabbitmq-user
      RABBITMQ_PASSWORD: rabbitmq-password
      RABBITMQ_QUEUE_NAME: posts_queue
      RABBITMQ_EXCHANGE_NAME: posts_exchange

  web:
    build:
      context: ./web
    container_name: web
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: rabbitmq-user
      RABBITMQ_PASSWORD: rabbitmq-password
      RABBITMQ_QUEUE_NAME: posts_queue
      RABBITMQ_EXCHANGE_NAME: posts_exchange
